/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package es.upm.oeg.librairy.service.modeler.facade.model;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class TopicNeighbour extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TopicNeighbour\",\"namespace\":\"es.upm.oeg.librairy.service.modeler.facade.model\",\"fields\":[{\"name\":\"id\",\"type\":\"int\",\"default\":-1},{\"name\":\"description\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"similarity\",\"type\":{\"type\":\"enum\",\"name\":\"Similarity\",\"symbols\":[\"CONCURRENCE\"]},\"default\":\"CONCURRENCE\"},{\"name\":\"score\",\"type\":\"double\",\"default\":0.0}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   private int id;
   private java.lang.String description;
   private es.upm.oeg.librairy.service.modeler.facade.model.Similarity similarity;
   private double score;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public TopicNeighbour() {}

  /**
   * All-args constructor.
   */
  public TopicNeighbour(java.lang.Integer id, java.lang.String description, es.upm.oeg.librairy.service.modeler.facade.model.Similarity similarity, java.lang.Double score) {
    this.id = id;
    this.description = description;
    this.similarity = similarity;
    this.score = score;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return description;
    case 2: return similarity;
    case 3: return score;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Integer)value$; break;
    case 1: description = (java.lang.String)value$; break;
    case 2: similarity = (es.upm.oeg.librairy.service.modeler.facade.model.Similarity)value$; break;
    case 3: score = (java.lang.Double)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   */
  public java.lang.Integer getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Integer value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'description' field.
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.String value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'similarity' field.
   */
  public es.upm.oeg.librairy.service.modeler.facade.model.Similarity getSimilarity() {
    return similarity;
  }

  /**
   * Sets the value of the 'similarity' field.
   * @param value the value to set.
   */
  public void setSimilarity(es.upm.oeg.librairy.service.modeler.facade.model.Similarity value) {
    this.similarity = value;
  }

  /**
   * Gets the value of the 'score' field.
   */
  public java.lang.Double getScore() {
    return score;
  }

  /**
   * Sets the value of the 'score' field.
   * @param value the value to set.
   */
  public void setScore(java.lang.Double value) {
    this.score = value;
  }

  /** Creates a new TopicNeighbour RecordBuilder */
  public static es.upm.oeg.librairy.service.modeler.facade.model.TopicNeighbour.Builder newBuilder() {
    return new es.upm.oeg.librairy.service.modeler.facade.model.TopicNeighbour.Builder();
  }
  
  /** Creates a new TopicNeighbour RecordBuilder by copying an existing Builder */
  public static es.upm.oeg.librairy.service.modeler.facade.model.TopicNeighbour.Builder newBuilder(es.upm.oeg.librairy.service.modeler.facade.model.TopicNeighbour.Builder other) {
    return new es.upm.oeg.librairy.service.modeler.facade.model.TopicNeighbour.Builder(other);
  }
  
  /** Creates a new TopicNeighbour RecordBuilder by copying an existing TopicNeighbour instance */
  public static es.upm.oeg.librairy.service.modeler.facade.model.TopicNeighbour.Builder newBuilder(es.upm.oeg.librairy.service.modeler.facade.model.TopicNeighbour other) {
    return new es.upm.oeg.librairy.service.modeler.facade.model.TopicNeighbour.Builder(other);
  }
  
  /**
   * RecordBuilder for TopicNeighbour instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TopicNeighbour>
    implements org.apache.avro.data.RecordBuilder<TopicNeighbour> {

    private int id;
    private java.lang.String description;
    private es.upm.oeg.librairy.service.modeler.facade.model.Similarity similarity;
    private double score;

    /** Creates a new Builder */
    private Builder() {
      super(es.upm.oeg.librairy.service.modeler.facade.model.TopicNeighbour.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(es.upm.oeg.librairy.service.modeler.facade.model.TopicNeighbour.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.description)) {
        this.description = data().deepCopy(fields()[1].schema(), other.description);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.similarity)) {
        this.similarity = data().deepCopy(fields()[2].schema(), other.similarity);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.score)) {
        this.score = data().deepCopy(fields()[3].schema(), other.score);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing TopicNeighbour instance */
    private Builder(es.upm.oeg.librairy.service.modeler.facade.model.TopicNeighbour other) {
            super(es.upm.oeg.librairy.service.modeler.facade.model.TopicNeighbour.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.description)) {
        this.description = data().deepCopy(fields()[1].schema(), other.description);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.similarity)) {
        this.similarity = data().deepCopy(fields()[2].schema(), other.similarity);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.score)) {
        this.score = data().deepCopy(fields()[3].schema(), other.score);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'id' field */
    public java.lang.Integer getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public es.upm.oeg.librairy.service.modeler.facade.model.TopicNeighbour.Builder setId(int value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'id' field */
    public es.upm.oeg.librairy.service.modeler.facade.model.TopicNeighbour.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'description' field */
    public java.lang.String getDescription() {
      return description;
    }
    
    /** Sets the value of the 'description' field */
    public es.upm.oeg.librairy.service.modeler.facade.model.TopicNeighbour.Builder setDescription(java.lang.String value) {
      validate(fields()[1], value);
      this.description = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'description' field has been set */
    public boolean hasDescription() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'description' field */
    public es.upm.oeg.librairy.service.modeler.facade.model.TopicNeighbour.Builder clearDescription() {
      description = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'similarity' field */
    public es.upm.oeg.librairy.service.modeler.facade.model.Similarity getSimilarity() {
      return similarity;
    }
    
    /** Sets the value of the 'similarity' field */
    public es.upm.oeg.librairy.service.modeler.facade.model.TopicNeighbour.Builder setSimilarity(es.upm.oeg.librairy.service.modeler.facade.model.Similarity value) {
      validate(fields()[2], value);
      this.similarity = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'similarity' field has been set */
    public boolean hasSimilarity() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'similarity' field */
    public es.upm.oeg.librairy.service.modeler.facade.model.TopicNeighbour.Builder clearSimilarity() {
      similarity = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'score' field */
    public java.lang.Double getScore() {
      return score;
    }
    
    /** Sets the value of the 'score' field */
    public es.upm.oeg.librairy.service.modeler.facade.model.TopicNeighbour.Builder setScore(double value) {
      validate(fields()[3], value);
      this.score = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'score' field has been set */
    public boolean hasScore() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'score' field */
    public es.upm.oeg.librairy.service.modeler.facade.model.TopicNeighbour.Builder clearScore() {
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public TopicNeighbour build() {
      try {
        TopicNeighbour record = new TopicNeighbour();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Integer) defaultValue(fields()[0]);
        record.description = fieldSetFlags()[1] ? this.description : (java.lang.String) defaultValue(fields()[1]);
        record.similarity = fieldSetFlags()[2] ? this.similarity : (es.upm.oeg.librairy.service.modeler.facade.model.Similarity) defaultValue(fields()[2]);
        record.score = fieldSetFlags()[3] ? this.score : (java.lang.Double) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
